<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysScheduleRecordMapper">

    <resultMap type="SysScheduleRecord" id="SysScheduleRecordResult">
        <result property="scheduleId"    column="schedule_id"    />
        <result property="taskId"    column="task_id"    />
        <result property="memberId"    column="member_id"    />
        <result property="reason"    column="reason"    />
        <result property="from"    column="from"    />
        <result property="to"    column="to"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSysScheduleRecordVo">
        select schedule_id, task_id, member_id, reason, `from`, `to`, create_by, create_time, update_time from sys_schedule_record
    </sql>

    <select id="selectSysScheduleRecordList" parameterType="SysScheduleRecord" resultMap="SysScheduleRecordResult">
        <include refid="selectSysScheduleRecordVo"/>
        <where>
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="memberId != null "> and member_id = #{memberId}</if>
            <if test="reason != null  and reason != ''"> and reason = #{reason}</if>
            <if test="from != null  and from != ''"> and from = #{from}</if>
            <if test="to != null  and to != ''"> and to = #{to}</if>
        </where>
    </select>

    <select id="selectSysScheduleRecordByScheduleId" parameterType="Long" resultMap="SysScheduleRecordResult">
        <include refid="selectSysScheduleRecordVo"/>
        where schedule_id = #{scheduleId}
    </select>

    <insert id="insertSysScheduleRecord" parameterType="SysScheduleRecord" useGeneratedKeys="true" keyProperty="scheduleId">
        insert into sys_schedule_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="memberId != null">member_id,</if>
            <if test="reason != null">reason,</if>
            <if test="from != null and from != ''">from,</if>
            <if test="to != null and to != ''">to,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="memberId != null">#{memberId},</if>
            <if test="reason != null">#{reason},</if>
            <if test="from != null and from != ''">#{from},</if>
            <if test="to != null and to != ''">#{to},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateSysScheduleRecord" parameterType="SysScheduleRecord">
        update sys_schedule_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="memberId != null">member_id = #{memberId},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="from != null and from != ''">from = #{from},</if>
            <if test="to != null and to != ''">to = #{to},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where schedule_id = #{scheduleId}
    </update>

    <delete id="deleteSysScheduleRecordByScheduleId" parameterType="Long">
        delete from sys_schedule_record where schedule_id = #{scheduleId}
    </delete>

    <delete id="deleteSysScheduleRecordByScheduleIds" parameterType="String">
        delete from sys_schedule_record where schedule_id in
        <foreach item="scheduleId" collection="array" open="(" separator="," close=")">
            #{scheduleId}
        </foreach>
    </delete>
</mapper>